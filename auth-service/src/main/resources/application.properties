spring.application.name=connect-auth-service
server.port=4000

## endpoints without authentication
security.permit-all-routes=/auth/public/**


## google oauth
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.scope=profile,email

## Google OAuth2 Provider (hardcoded URLs)
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# --- Database Configuration ---
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# --- JWT Configuration ---
jwt.private.key=${JWT_PRIVATE_KEY}
jwt.public.key=${JWT_PUBLIC_KEY}

# --- Production-safe DDL/SQL Init Defaults ---
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=never